# Define the Docker image for the environment (Python 3.9 with PostgreSQL client)
image: python:3.12.2

# Define global variables for PostgreSQL configuration
variables:
  POSTGRES_DB: "CFTdatabase"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "SopraHR2024++"

# Define caching to speed up builds by caching Python dependencies
cache:
  paths:
    - venv/  # Cache Python virtual environment

# Define stages for the pipeline
stages:
  - test
  - deploy

services:
  - name: postgres:latest
# Define jobs
before_script:
test:
  stage: test
  script:
    # Set up virtual environment
    - python -m venv venv
    - source venv/bin/activate
    # Install dependencies
    - pip install -r requirements.txt
    # Run Django tests
    - python manage.py test
  only:
    - branches  # Run this job for every branch except 'master'
  except:
    - backend 

deploy:
  stage: deploy
  script:
    # Set up virtual environment
    - python -m venv venv
    - source venv/bin/activate
    # Install dependencies
    - pip install -r requirements.txt
    # Run Django migrations (sync with PostgreSQL)
    - python manage.py migrate
  only:
    - backend   # Run this job only for the 'master' branch
